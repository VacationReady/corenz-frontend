generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  MANAGER
  EMPLOYEE
}

enum LeaveType {
  ANNUAL
  SICK
  UNPAID
  PARENTAL
  OTHER
}

enum LeaveStatus {
  PENDING
  APPROVED
  DECLINED
}

model User {
  id          String   @id @default(uuid())
  email       String   @unique
  password    String?
  firstName   String
  lastName    String
  phone       String?
  department  String?
  jobRole     String?
  isActivated Boolean  @default(false)
  role        Role     @default(EMPLOYEE)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  leaveRequests LeaveRequest[]
}

model Employee {
  id          String   @id @default(uuid())
  firstName   String
  lastName    String
  phone       String?
  department  String?
  jobRole     String?
  email       String   @unique
  password    String?
  isActivated Boolean  @default(false)
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  activationTokens ActivationToken[] // âœ… Required back-reference
}

model LeaveRequest {
  id        String      @id @default(uuid())
  userId    String
  user      User        @relation(fields: [userId], references: [id])
  type      LeaveType
  startDate DateTime
  endDate   DateTime
  reason    String?
  status    LeaveStatus @default(PENDING)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  @@index([userId])
}

model ActivationToken {
  id         String   @id @default(uuid())
  token      String   @unique
  employeeId String
  employee   Employee @relation(fields: [employeeId], references: [id])
  createdAt  DateTime @default(now())
  expiresAt  DateTime
}
