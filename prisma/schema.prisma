generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int               @id @default(autoincrement())
  email            String            @unique
  name             String
  password         String
  role             String?
  managerId        Int?
  manager          User?             @relation("ManagerToEmployees", fields: [managerId], references: [id])
  employees        User[]            @relation("ManagerToEmployees")
  leaveRequests    LeaveRequest[]
  onboardingTasks  OnboardingTask[]
  offboardingTasks OffboardingTask[]
}

model LeaveRequest {
  id         Int      @id @default(autoincrement())
  userId     Int
  user       User     @relation(fields: [userId], references: [id])
  managerId  Int?
  status     String
  startDate  DateTime
  endDate    DateTime
  reason     String
  createdAt  DateTime @default(now())
}

model OnboardingTask {
  id        Int    @id @default(autoincrement())
  userId    Int
  user      User   @relation(fields: [userId], references: [id])
  task      String
  completed Boolean @default(false)
}

model OffboardingTask {
  id        Int    @id @default(autoincrement())
  userId    Int
  user      User   @relation(fields: [userId], references: [id])
  task      String
  completed Boolean @default(false)
}

model Employee {
  id         Int      @id @default(autoincrement())
  name       String
  phone      String
  department String
  jobRole    String
  createdAt  DateTime @default(now())

  password    String?
  isActivated Boolean   @default(false)
  activationTokens ActivationToken[]
}

model ActivationToken {
  id         Int       @id @default(autoincrement())
  token      String
  employee   Employee  @relation(fields: [employeeId], references: [id])
  employeeId Int
  expiresAt  DateTime
  createdAt  DateTime  @default(now())
}
